☆★

- Rebuild and redeploy

- Ask question about bookings
- Postbird

To Do CheckList: 

- REMEMBER TO EDIT STORE SHAPE
- Fix create spot URL fields not being centered.
- Fix create and update spots forms (mainly styling but check functionality).
- Fix profile dropdown for wider screens.
- Fix review modals after I stupidly broke them

- Huge render problems (Fixed)
- Fix profile button modal so it looks decent on all screens (fixed, mostly
- Fix spotImages upload issues on local and render (i THINK this is fixed) (seems fixed but update spot for images is an issue) FIXED
- Render: logout broken, won't log out.  All spots are hosted by me which is strange - FIXED
- Multiple pictures aren't immediately loaded after creating a spot - FIXED
- Fix login issue, demo user isn't consistent FIXED
- Set user issue, CLEAR STATE! - FIXED
- Description must be 30 characters minimum in create and update spot - FIXED
- Issue with log in/sign up on render: current spots is only for demo-lition 
(Sam Boyle) account for some unaccountable (lol) reason. - FIXED

rgb(113, 69, 184); PURPLE
rgb(28, 50, 146); BLUE
rgb(30, 178, 197); TEAL

.profile-dropdown {
    position: absolute;
    z-index: 99999;
    right: 0%;
    left: 74%;
    margin-right: 20px;
    margin-top: 25px;
    padding: 10px;
    border: 3px solid rgb(28, 50, 146);
    background-color: white;
    border-radius: 10px;
    overflow-wrap: break-word;
    display: flex;
    flex-direction: column;

}

onClick={history.push(`/spots/${spotId}/bookings`)}

FINISHED CREATE REVIEW!!!
FINISHED DELETE REVIEW!!!
FINISHED UPDATE REVIEW!!!
FINISHED RESERVE BOX STYLING!!! (maybe do a bit more)
FIXED POST REVIEW BUTTON ON SPOTS WITH NO REVIEWS!!!

        <input className='form-field' type="text" value={state} onChange={(e) => setState(e.target.value)}  />

      <select className='form-field CreateStateField'>
        <option value='Alabama'>Alabama</option>
        <option value='Alaska'>Alaska</option>
        <option value='Arizona'>Arizona</option>
        <option value='Arkansas'>Arkansas</option>
        <option value='California'>California</option>
        <option value='Colorado'>Colorado</option>
        <option value='Connecticut'>Connecticut</option>
        <option value=''>Delaware</option>
        <option value='Florida'>Florida</option>
        <option value='Georgia'>Georgia</option>
        <option value='Hawaii'>Hawaii</option>
        <option value='Idaho'>Idaho</option>
        <option value='Illinois'>Illinois</option>
        <option value='Indiana'>Indiana</option>
        <option value='Iowa'>Iowa</option>
        <option value='Kansas'>Kansas</option>
        <option value='Kentucky'>Kentucky</option>
        <option value='Louisiana'>Louisiana</option>
        <option value='Maine'>Maine</option>
        <option value='Maryland'>Maryland</option>
        <option value='Massachusetts'>Massachusetts</option>
        <option value='Michigan'>Michigan</option>
        <option value='Minnesota'>Minnesota</option>
        <option value='Mississippi'>Mississippi</option>
        <option value='Missouri'>Missouri</option>
        <option value='Montana'>Montana</option>
        <option value='Nebraska'>Nebraska</option>
        <option value='Nevada'>Nevada</option>
        <option value='New Hampshire'>New Hampshire</option>
        <option value='New Jersey'>New Jersey</option>
        <option value='New Mexico'>New Mexico</option>
        <option value='New York'>New York</option>
        <option value='North Carolina'>North Carolina</option>
        <option value='North Dakota'>North Dakota</option>
        <option value='Ohio'>Ohio</option>
        <option value='Oregon'>Oklahoma</option>
        <option value='Pennsylvania'>Pennsylvania</option>
        <option value='Rhode Island'>Rhode Island</option>
        <option value='South Carolina'>South Carolina</option>
        <option value='South Dakota'>South Dakota</option>
        <option value='Tennessee'>Tennessee</option>
        <option value='Texas'>Texas</option>
        <option value='Utah'>Utah</option>
        <option value='Vermont'>Vermont</option>
        <option value='Virginia'>Virginia</option>
        <option value='Washington'>Washington</option>
        <option value='West Virginia'>West Virginia</option>
        <option value='Wisconsin'>Wisconsin</option>
        <option value='Wyoming'>Wyoming</option>
        <option value='District of Columbia'>District of Columbia</option>
      </select>

onClick={setShowMenu(false)

{avgRating !== null ? `${parseFloat(avgRating.toFixed(1))} · ${numReviews} reviews` : 'New'}
{avgRating !== null && typeof avgRating !== 'undefined' ? `${parseFloat(avgRating.toFixed(1))} · ${numReviews} reviews` : 'New'}

{avgRating !== null && typeof avgRating !== 'undefined' ? `${parseFloat(avgRating.toFixed(1))} · ${numReviews} reviews` : 'New'}

export const postSpotImages = (spotImages, spotId) => async (dispatch) => {
  try {
    for (let spotImage of spotImages) {
      if (spotImage.id) {
        // Update existing image
        const response = await csrfFetch(`/api/spots/${spotId}/images/${spotImage.id}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ url: spotImage.url, preview: spotImage.preview })
        });
      } else {
        // Create new image
        const response = await csrfFetch(`/api/spots/${spotId}/images`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(spotImage)
        });
      }
    }
  } catch (error) {
    console.error('Error updating or creating spot images:', error);
  }
};

 console.log('IMAGE URLS', imageUrls)



.CreateFormDiv {
    width: 50%;
    margin: 0 auto;
}

  .CreateForm {
    width: 100%;
    display: flex;
    flex-direction: column;
    padding: 10px;
}


.CreateFormIntro {
    text-align: left;
    margin-bottom: 20px;
    width: 50%;
    margin-left: 26%;
    margin-right: 25%
}

.CreateFormField {
    padding: 10px;
    margin-top: 10px;
    width: 400px;
    justify-content: left;
}

.CreateCity {
    width: 160px;
}

.CreateState {
    width: 160px;
    height: 40px;
    font-size: 16px;
}

.CreateCityStateSpan {
    display: flex;
    flex-direction: row;
}

.CreateDescription {
    
}

label {
    font-weight: bold;
}

.CreateFormGroup {
    display: flex;
    flex-direction: column;
    /* margin-bottom: 20px;  */
}

.CreateFormGroup label {
    display: block;
}

.CreateFormGroupBlock {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    margin-bottom: 20px;
}

.CreateImageURLField {
    margin-bottom: 10px;
}

.CreateFormErrors {
  color: red;
}

@media (max-width: 768px) {
    .spot-form-div {
        width: 80%;
        margin-left: 10%;
        margin-right: 10%;
    }
}